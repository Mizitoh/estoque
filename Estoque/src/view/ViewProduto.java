/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ControllerProduto;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelProduto;
import util.Formatador;

/**
 *
 * @author Usuario
 */
public class ViewProduto extends javax.swing.JFrame {

    ModelProduto modelProduto = new ModelProduto();
    ControllerProduto controllerProduto = new ControllerProduto();
    List<ModelProduto> listaProduto = new ArrayList<>();

    /**
     * Creates new form ViewProduto
     */
    public ViewProduto() throws SQLException {
        initComponents();
        setIcon();
        setLocationRelativeTo(null);
        iniciarFormProd();
        setarJtfValor();
        this.jLabel4.setForeground(Color.red);
        Formatador fmt = new Formatador();
        fmt.converterVirgulaParaPonto(jtfValorProduto.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigoProduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtdDescricaoProduto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfValorProduto = new javax.swing.JTextField();
        btnSalvarProduto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProduto = new javax.swing.JTable();
        btnLimparProduto = new javax.swing.JButton();
        btnAlterarProduto = new javax.swing.JButton();
        btnExcluirProduto = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Produtos");

        jLabel1.setText("Codigo");

        jtfCodigoProduto.setEditable(false);

        jLabel2.setText("Descrição");

        jtdDescricaoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtdDescricaoProdutoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtdDescricaoProdutoKeyTyped(evt);
            }
        });

        jLabel3.setText("Valor do Produto");

        jtfValorProduto.setText("0,00");
        jtfValorProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfValorProdutoMouseClicked(evt);
            }
        });
        jtfValorProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfValorProdutoKeyPressed(evt);
            }
        });

        btnSalvarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/salvar.png"))); // NOI18N
        btnSalvarProduto.setText("Salvar");
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        jTableProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Código", "Descrição do Produto", "Quantidade", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProduto);
        if (jTableProduto.getColumnModel().getColumnCount() > 0) {
            jTableProduto.getColumnModel().getColumn(0).setMinWidth(80);
            jTableProduto.getColumnModel().getColumn(0).setMaxWidth(80);
            jTableProduto.getColumnModel().getColumn(2).setMinWidth(60);
            jTableProduto.getColumnModel().getColumn(2).setMaxWidth(60);
            jTableProduto.getColumnModel().getColumn(3).setMinWidth(60);
            jTableProduto.getColumnModel().getColumn(3).setMaxWidth(60);
        }

        btnLimparProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/limpar.png"))); // NOI18N
        btnLimparProduto.setText("Limpar");
        btnLimparProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparProdutoActionPerformed(evt);
            }
        });

        btnAlterarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/alterar.png"))); // NOI18N
        btnAlterarProduto.setText("Alterar");
        btnAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProdutoActionPerformed(evt);
            }
        });

        btnExcluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botoes/excluir.png"))); // NOI18N
        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        jLabel4.setText("Clique para voltar a tela principal");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtdDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfValorProduto)))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLimparProduto)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterarProduto)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtdDescricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSalvarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimparProduto)
                        .addComponent(btnAlterarProduto)
                        .addComponent(btnExcluirProduto))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnLimparProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparProdutoActionPerformed
        limparForm();
    }//GEN-LAST:event_btnLimparProdutoActionPerformed

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        modelProduto = new model.ModelProduto();
        modelProduto.setDescricao(jtdDescricaoProduto.getText());
        modelProduto.setValor(new Formatador().converterVirgulaParaPonto(jtfValorProduto.getText()));
        modelProduto.setQuantidade(0);

        System.out.print(jtfValorProduto);
        System.out.println(jtdDescricaoProduto);

        if (new Formatador().converterVirgulaParaPonto(jtfValorProduto.getText()) <= 0 || jtdDescricaoProduto.getText() == null) {
            JOptionPane.showMessageDialog(null, "Não pode haver campos vazios ou valores menor que zero.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (controllerProduto.salvarProdutoController(modelProduto)) {
                JOptionPane.showMessageDialog(null, "Produto salvo com sucesso!", "OK", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar dados", "Erro", JOptionPane.ERROR_MESSAGE);
            }

            try {
                iniciarFormProd();
            } catch (SQLException ex) {
                Logger.getLogger(ViewUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

            limparForm();
        }
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void btnAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProdutoActionPerformed
        int linha = jTableProduto.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione o cadastro que será alterado.", "Selecione um cadastro", JOptionPane.INFORMATION_MESSAGE);
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Tem certeza de que deseja alterar o cadastro?", "Atenção", dialogButton);
            if (dialogResult == 0) {
                try {
                    modelProduto = new model.ModelProduto();
                    modelProduto.setId(Integer.parseInt(jtfCodigoProduto.getText()));
                    modelProduto.setDescricao(jtdDescricaoProduto.getText());
                    modelProduto.setValor(Double.parseDouble(jtfValorProduto.getText()));
                    modelProduto.setQuantidade(0);
                    if (controllerProduto.atualizarProdutoController(modelProduto)) {
                        JOptionPane.showMessageDialog(null, "Cadastro alterado com sucesso!", "OK", JOptionPane.INFORMATION_MESSAGE);
                        limparForm();
                        iniciarFormProd();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao alterar dados " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(ViewUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println("Yes option");
            } else {
                System.out.println("desistiu de alterar");
            }
        }
    }//GEN-LAST:event_btnAlterarProdutoActionPerformed

    private void jTableProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutoMouseClicked
        jtfCodigoProduto.setText(jTableProduto.getValueAt(jTableProduto.getSelectedRow(), 0).toString());
        jtdDescricaoProduto.setText(jTableProduto.getValueAt(jTableProduto.getSelectedRow(), 1).toString());
        modelProduto.setQuantidade(0);
        jtfValorProduto.setText(jTableProduto.getValueAt(jTableProduto.getSelectedRow(), 3).toString());
    }//GEN-LAST:event_jTableProdutoMouseClicked

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        int linha = jTableProduto.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione o cadastro que será deletado.", "Selecione um cadastro", JOptionPane.INFORMATION_MESSAGE);
        } else {

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "Tem certeza de que deseja excluir o cadastro?", "Atenção", dialogButton);
            if (dialogResult == 0) {
                try {
                    if (controllerProduto.excluirProdutoController(Integer.parseInt(jtfCodigoProduto.getText()))) {
                        JOptionPane.showMessageDialog(null, "Cadastro deletado com sucesso!", "OK", JOptionPane.INFORMATION_MESSAGE);
                        limparForm();
                        iniciarFormProd();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao deletar dados " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(ViewUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
                System.out.println("Yes option");
            } else {
                System.out.println("desistiu de excluir");
            }
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void jtfValorProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfValorProdutoMouseClicked
        jtfValorProduto.selectAll();
    }//GEN-LAST:event_jtfValorProdutoMouseClicked

    private void jtfValorProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorProdutoKeyPressed
     
    }//GEN-LAST:event_jtfValorProdutoKeyPressed

    private void jtdDescricaoProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtdDescricaoProdutoKeyTyped
       
    }//GEN-LAST:event_jtdDescricaoProdutoKeyTyped

    private void jtdDescricaoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtdDescricaoProdutoKeyReleased
         
    }//GEN-LAST:event_jtdDescricaoProdutoKeyReleased

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        this.dispose();
        new ViewPrincipal().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewProduto().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarProduto;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnLimparProduto;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProduto;
    private javax.swing.JTextField jtdDescricaoProduto;
    private javax.swing.JTextField jtfCodigoProduto;
    private javax.swing.JTextField jtfValorProduto;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imagens/botoes/produtos.png")));
    }

    private void iniciarFormProd() throws SQLException {

        listaProduto = controllerProduto.getListaProdutoController();
        DefaultTableModel modelo = (DefaultTableModel) jTableProduto.getModel();
        modelo.setNumRows(0); //limpa linhas da tabela

        for (ModelProduto modu : listaProduto) {
            modelo.addRow(new Object[]{modu.getId(), modu.getDescricao(), modu.getQuantidade(), String.format("%.2f",modu.getValor())});
        }
    }

    private void limparForm() {
        jtdDescricaoProduto.setText("");
        jtfValorProduto.setText("");
        jtfCodigoProduto.setText("");
    }

    private void setarJtfValor() {
       jtfValorProduto.selectAll();
    }
    
}
